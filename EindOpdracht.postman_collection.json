{
	"info": {
		"_postman_id": "2e487e6a-d2b0-44aa-9f18-d68e3894c1ac",
		"name": "EindOpdracht",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Add Accounts",
			"item": [
				{
					"name": "Create test_customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Username and Password isEqual\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_customer\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"old_pw_customer\", pm.response.json().password);\r",
									"pm.collectionVariables.set(\"user_customer\", pm.response.json().username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_customer\",\r\n    \"password\": \"customer_password\",\r\n    \"email\": \"test@email.org\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/signup/customer",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"signup",
								"customer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check username and role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_customer\");\r",
									"    pm.expect(jsonData.roles[0]).to.eql(\"ROLE_CUSTOMER\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"login_token_customer\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_customer\",\r\n    \"password\": \"customer_password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/authenticate",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test logged in test_customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check authentication\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.authenticated).to.eql(true);\r",
									"    pm.expect(jsonData.principal.username).to.eql(\"test_customer\")\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{login_token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/auth/authenticated",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"authenticated"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update test_customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{login_token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_customer\",\r\n    \"password\": \"test_password2\",\r\n    \"email\": \"fake@customer.org\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/update",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login test_customer again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check username and role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_user\");\r",
									"    pm.expect(jsonData.roles[0]).to.eql(\"ROLE_CUSTOMER\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"login_token_customer\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{login_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_customer\",\r\n    \"password\": \"test_password2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/authenticate",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get test_customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"password is changed\", function() {\r",
									"    pm.expect(pm.response.json().password).to.not.eql(pm.collectionVariables.get(\"old_pw_customer\"))\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{login_token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/data",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update customer data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{login_token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Toby\",\r\n    \"lastName\": \"Testron\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/customer/update",
							"host": [
								"{{host}}"
							],
							"path": [
								"customer",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer data test_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check first- and lastName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"Toby\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"Testron\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check reservation list is empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.customerReservationList.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{login_token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/customer/data",
							"host": [
								"{{host}}"
							],
							"path": [
								"customer",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create test_venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Username and Password isEqual\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_venue\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"old_venue_password\", pm.response.json().password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_venue\",\r\n    \"password\": \"venue_password\",\r\n    \"email\": \"user@venue.org\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/signup/venue",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"signup",
								"venue"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login test_venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check username and role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_venue\");\r",
									"    pm.expect(jsonData.roles[0]).to.eql(\"ROLE_VENUE\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"venue_login_token\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_venue\",\r\n    \"password\": \"venue_password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/authenticate",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update test_venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{venue_login_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_venue\",\r\n    \"password\": \"venue_password2\",\r\n    \"email\": \"fake@venue.org\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/update",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login test_venue again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check username and role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_venue\");\r",
									"    pm.expect(jsonData.roles[0]).to.eql(\"ROLE_VENUE\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"venue_login_token\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_venue\",\r\n    \"password\": \"venue_password2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/authenticate",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get test_venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"password is changed\", function() {\r",
									"    pm.expect(pm.response.json().password).to.not.eql(pm.collectionVariables.get(\"old_venue_password\"))\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{venue_login_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/data",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update venue data test_venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{venue_login_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"venueName\": \"fake venue inc.\",\r\n    \"venueEmailAddress\": \"fake_email@bullshitbusiness.org\",\r\n    \"address\": {\r\n        \"streetName\": \"troeplaan\",\r\n        \"number\": \"09AZ\",\r\n        \"city\": \"Agga\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/venue/update",
							"host": [
								"{{host}}"
							],
							"path": [
								"venue",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get venue data test_venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check first- and lastName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.venueName).to.eql(\"fake venue inc.\");\r",
									"    pm.expect(jsonData.venueEmailAddress).to.eql(\"fake_email@bullshitbusiness.org\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check reservation list is empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.venueReservationList.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{venue_login_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/venue/test_venue",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"venue",
								"test_venue"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reservation tests",
			"item": [
				{
					"name": "Create venue for reservation tests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Username and Password isEqual\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_venue_reservations\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"venue_reservations\",\r\n    \"password\": \"venue_password\",\r\n    \"email\": \"reservation_test@venue.org\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/signup/venue",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"signup",
								"venue"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check username and role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_venue_reservations\");\r",
									"    pm.expect(jsonData.roles[0]).to.eql(\"ROLE_VENUE\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"venue_login_token\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"venue_reservations\",\r\n    \"password\": \"venue_password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/authenticate",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fill venue data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{venue_login_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"venueName\": \"fake venue inc.\",\r\n    \"venueEmailAddress\": \"fake_email@bullshitbusiness.org\",\r\n    \"address\": {\r\n        \"streetName\": \"troeplaan\",\r\n        \"number\": \"09AZ\",\r\n        \"city\": \"Agga\"\r\n    },\r\n    \"startTime\":\"08:30\",\r\n    \"stopTime\":\"17:00\",\r\n    \"slotDuration\":30,\r\n    \"slotsPerDay\":17,\r\n    \"peoplePerSlot\":30\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/venue/{{venue_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"venue",
								"{{venue_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create test_customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Username and Password isEqual\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_customer\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"customer_password\", pm.response.json().password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_customer\",\r\n    \"password\": \"test_password\",\r\n    \"email\": \"test@customer.org\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/signup/customer",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"signup",
								"customer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login customer_test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check username and role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_customer\");\r",
									"    pm.expect(jsonData.roles[0]).to.eql(\"ROLE_CUSTOMER\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"customer_token\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_customer\",\r\n    \"password\": \"test_password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/authenticate",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add bunch of reservations 1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerId\":0,\r\n    \"venueId\":0,\r\n    \"date\":\"22-02-2021\",\r\n    \"time\":\"11:30\",\r\n    \"groupSize\":4,\r\n    \"timeSlotIndex\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/venue/add_reservation",
							"host": [
								"{{host}}"
							],
							"path": [
								"venue",
								"add_reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add too large reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerId\":\"2\",\r\n    \"venueId\":\"3\",\r\n    \"date\":\"22-02-2021\",\r\n    \"time\":\"11:30\",\r\n    \"groupSize\":40,\r\n    \"timeSlotIndex\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/venue/add_reservation",
							"host": [
								"{{host}}"
							],
							"path": [
								"venue",
								"add_reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all venues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"venue_id\", pm.response.json().venues[0].id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/venue/all",
							"host": [
								"{{host}}"
							],
							"path": [
								"venue",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "get venue availability",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/venue/{{venue_id}}/availability",
							"host": [
								"{{host}}"
							],
							"path": [
								"venue",
								"{{venue_id}}",
								"availability"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "update entity test, id persistence",
			"item": [
				{
					"name": "Create venue for update test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Username and Password isEqual\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_venue\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"old_venue_password\", pm.response.json().password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_venue\",\r\n    \"password\": \"venue_password\",\r\n    \"email\": \"user@venue.org\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/signup/venue",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"signup",
								"venue"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check username and role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"test_venue\");\r",
									"    pm.expect(jsonData.roles[0]).to.eql(\"ROLE_VENUE\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"venue_login_token\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{customer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test_venue\",\r\n    \"password\": \"venue_password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/authenticate",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": []
				},
				{
					"name": "Fill venue data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{venue_login_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"venueName\": \"fake venue inc.\",\r\n    \"venueEmailAddress\": \"fake_email@bullshitbusiness.org\",\r\n    \"address\": {\r\n        \"streetName\": \"troeplaan\",\r\n        \"number\": \"09AZ\",\r\n        \"city\": \"Agga\"\r\n    },\r\n    \"startTime\":\"08:30\",\r\n    \"stopTime\":\"17:00\",\r\n    \"slotDuration\":30,\r\n    \"slotsPerDay\":17,\r\n    \"peoplePerSlot\":30\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/venue/{{venue_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"venue",
								"{{venue_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "venue data update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{venue_login_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"venueName\": \"fake venue inc.\",\r\n    \"venueEmailAddress\": \"fake_email@bullshitbusiness.org\",\r\n    \"address\": {\r\n        \"streetName\": \"troeplaan\",\r\n        \"number\": \"09AZ\",\r\n        \"city\": \"Agga\"\r\n    },\r\n    \"startTime\":\"08:30\",\r\n    \"stopTime\":\"17:00\",\r\n    \"slotDuration\":30,\r\n    \"slotsPerDay\":17,\r\n    \"peoplePerSlot\":30\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/venue/{{venue_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"venue",
								"{{venue_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "login_token",
			"value": ""
		},
		{
			"key": "old_password",
			"value": ""
		},
		{
			"key": "venue_login_token",
			"value": ""
		},
		{
			"key": "old_venue_password",
			"value": ""
		},
		{
			"key": "customer_password",
			"value": ""
		},
		{
			"key": "customer_token",
			"value": ""
		},
		{
			"key": "venue_id",
			"value": ""
		},
		{
			"key": "old_pw_customer",
			"value": ""
		},
		{
			"key": "user_customer",
			"value": ""
		},
		{
			"key": "login_token_customer",
			"value": ""
		}
	]
}